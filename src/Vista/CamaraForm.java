/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vista;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import java.awt.Color;
import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
/**
 *
 * @author darwi
 */
public class CamaraForm extends javax.swing.JDialog {


private Webcam webcam;
private WebcamPanel webcamPanel;
    /**
     * Creates new form CamaraForm
     */
    public CamaraForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        webcam = Webcam.getDefault();
if (webcam != null) {
    webcam.setViewSize(new java.awt.Dimension(640, 480));
    webcamPanel = new WebcamPanel(webcam);
    webcamPanel.setFPSDisplayed(true);

    panelCamara.setLayout(new java.awt.BorderLayout());
    panelCamara.add(webcamPanel, java.awt.BorderLayout.CENTER);
    panelCamara.revalidate();
} else {
    JOptionPane.showMessageDialog(this, "‚ö†Ô∏è No se detect√≥ ninguna c√°mara.");
}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelCamara = new javax.swing.JPanel();
        botcaptura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(275, 345));

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setLayout(null);

        panelCamara.setBackground(new java.awt.Color(255, 255, 255));
        panelCamara.setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout panelCamaraLayout = new javax.swing.GroupLayout(panelCamara);
        panelCamara.setLayout(panelCamaraLayout);
        panelCamaraLayout.setHorizontalGroup(
            panelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        panelCamaraLayout.setVerticalGroup(
            panelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jPanel1.add(panelCamara);
        panelCamara.setBounds(0, 0, 260, 250);

        botcaptura.setBackground(new java.awt.Color(204, 0, 0));
        botcaptura.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        botcaptura.setText("CAPTURAR");
        botcaptura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botcapturaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botcapturaMouseExited(evt);
            }
        });
        botcaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botcapturaActionPerformed(evt);
            }
        });
        jPanel1.add(botcaptura);
        botcaptura.setBounds(60, 260, 130, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botcapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botcapturaActionPerformed
 if (webcam != null) {
        try {
            if (!webcam.isOpen()) {
                webcam.open(); // Abre la c√°mara si a√∫n no est√° abierta
            }

            BufferedImage imagen = webcam.getImage(); // Captura la imagen actual

            if (imagen != null) {
                // Guardar la imagen en la carpeta Im√°genes del usuario
               JFileChooser selector = new JFileChooser();
selector.setDialogTitle("Guardar imagen como");
selector.setSelectedFile(new File("foto.jpg")); // Nombre sugerido

int resultado = selector.showSaveDialog(this);

if (resultado == JFileChooser.APPROVE_OPTION) {
    File archivo = selector.getSelectedFile();

    // Asegura que tenga extensi√≥n .jpg
    if (!archivo.getName().toLowerCase().endsWith(".jpg")) {
        archivo = new File(archivo.getAbsolutePath() + ".jpg");
    }

    ImageIO.write(imagen, "JPG", archivo);
    JOptionPane.showMessageDialog(this, "üì∏ Foto guardada como:\n" + archivo.getAbsolutePath());
} else {
    JOptionPane.showMessageDialog(this, "‚ùå Guardado cancelado.");
}                
        } }catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "‚ùå Error al guardar la imagen: " + ex.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "‚ö†Ô∏è C√°mara no disponible.");
    }  
    // TODO add your handling code here:
    }//GEN-LAST:event_botcapturaActionPerformed

    private void botcapturaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botcapturaMouseEntered
 botcaptura.setBackground(Color.BLACK);
 botcaptura.setForeground(Color.WHITE);         // TODO add your handling code here:
    }//GEN-LAST:event_botcapturaMouseEntered

    private void botcapturaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botcapturaMouseExited
botcaptura.setBackground(new Color(204, 0, 0));
 botcaptura.setForeground(new Color(0, 0, 0));        // TODO add your handling code here:
    }//GEN-LAST:event_botcapturaMouseExited
@Override
public void dispose() {
    if (webcam != null) {
        webcam.close();
    }
    super.dispose();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CamaraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CamaraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CamaraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CamaraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CamaraForm dialog = new CamaraForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botcaptura;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelCamara;
    // End of variables declaration//GEN-END:variables
}
